//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3625
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3625 版自动生成。
// 
#pragma warning disable 1591

namespace Bouwa.ITSP2V31.DAL.Itsp2WebServiceNamespace {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Itsp2WebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[][]))]
    public partial class Itsp2WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserCarOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserCarTwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartUserOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePassWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback inOutCarStatuOperationCompleted;
        
        private System.Threading.SendOrPostCallback inCarStatuItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback inCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback TbcarFeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscapeOverMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback inCarItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback outCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback outCarItmesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGetinspection_park_relationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParkingCheck_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Updatemoniter_taskStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStorm_typeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertmoniter_messageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertmoniter_messageBySelf_inspectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParkingCheck_DetailsByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParkingCheck_Details_ByParkingCheck_ChoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTb_JinWenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBlacklistAndOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpadateByEscape_over_messageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpadateByEscape_over_messageByDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectlicensePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePeopleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InOutCarOnileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataDrivingByVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadByDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProgramkeepOperationCompleted;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCounterfeitingCarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SixInterFaceCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteImageToJwtDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteCallMsgToJwtDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectIllegalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectRoadByParingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteImageToJwtDBNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteCallMsgToJwtDBNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCardTypeByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCardTypeByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCardTypeByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCardTypeByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCardInfoByConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisterTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientUserAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCarInformationByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrAddCarInforOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCarInformationHistoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectCarInformationHistoryRecordTwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCardInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCarInformationHistoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetCarInforAndCarHistoryByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarInfoAndBackCardHistoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarInfoAndApplyChangeCardHistoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCarInfoAndChangeCardHistoryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnSystemConfigValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback A_testCarFunctionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Itsp2WebService() {
            this.Url = global::Bouwa.ITSP2V31.DAL.Properties.Settings.Default.Bouwa_ITSP2V31_DAL_CardTypeWebServiceNamespace_Itsp2WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event SaveImageCompletedEventHandler SaveImageCompleted;
        
        /// <remarks/>
        public event CheckUserCompletedEventHandler CheckUserCompleted;
        
        /// <remarks/>
        public event CheckUserCarCompletedEventHandler CheckUserCarCompleted;
        
        /// <remarks/>
        public event CheckUserCarOneCompletedEventHandler CheckUserCarOneCompleted;
        
        /// <remarks/>
        public event CheckUserCarTwoCompletedEventHandler CheckUserCarTwoCompleted;
        
        /// <remarks/>
        public event StartUserOutCompletedEventHandler StartUserOutCompleted;
        
        /// <remarks/>
        public event ChangePassWordCompletedEventHandler ChangePassWordCompleted;
        
        /// <remarks/>
        public event inOutCarStatuCompletedEventHandler inOutCarStatuCompleted;
        
        /// <remarks/>
        public event inCarStatuItemCompletedEventHandler inCarStatuItemCompleted;
        
        /// <remarks/>
        public event inCarCompletedEventHandler inCarCompleted;
        
        /// <remarks/>
        public event TbcarFeeCompletedEventHandler TbcarFeeCompleted;
        
        /// <remarks/>
        public event EscapeOverMessageCompletedEventHandler EscapeOverMessageCompleted;
        
        /// <remarks/>
        public event inCarItemCompletedEventHandler inCarItemCompleted;
        
        /// <remarks/>
        public event outCarCompletedEventHandler outCarCompleted;
        
        /// <remarks/>
        public event outCarItmesCompletedEventHandler outCarItmesCompleted;
        
        /// <remarks/>
        public event GetUserByNameCompletedEventHandler GetUserByNameCompleted;
        
        /// <remarks/>
        public event GetUserGetinspection_park_relationCompletedEventHandler GetUserGetinspection_park_relationCompleted;
        
        /// <remarks/>
        public event GetParkingCheck_DetailsCompletedEventHandler GetParkingCheck_DetailsCompleted;
        
        /// <remarks/>
        public event Updatemoniter_taskStateCompletedEventHandler Updatemoniter_taskStateCompleted;
        
        /// <remarks/>
        public event GetStorm_typeCompletedEventHandler GetStorm_typeCompleted;
        
        /// <remarks/>
        public event Insertmoniter_messageCompletedEventHandler Insertmoniter_messageCompleted;
        
        /// <remarks/>
        public event Insertmoniter_messageBySelf_inspectionCompletedEventHandler Insertmoniter_messageBySelf_inspectionCompleted;
        
        /// <remarks/>
        public event GetParkingCheck_DetailsByCodeCompletedEventHandler GetParkingCheck_DetailsByCodeCompleted;
        
        /// <remarks/>
        public event GetParkingCheck_Details_ByParkingCheck_ChoiceCompletedEventHandler GetParkingCheck_Details_ByParkingCheck_ChoiceCompleted;
        
        /// <remarks/>
        public event GetTb_JinWenCompletedEventHandler GetTb_JinWenCompleted;
        
        /// <remarks/>
        public event SelectBlacklistAndCompletedEventHandler SelectBlacklistAndCompleted;
        
        /// <remarks/>
        public event UpadateByEscape_over_messageCompletedEventHandler UpadateByEscape_over_messageCompleted;
        
        /// <remarks/>
        public event UpadateByEscape_over_messageByDataTableCompletedEventHandler UpadateByEscape_over_messageByDataTableCompleted;
        
        /// <remarks/>
        public event SelectlicensePhotoCompletedEventHandler SelectlicensePhotoCompleted;
        
        /// <remarks/>
        public event ChangePeopleCompletedEventHandler ChangePeopleCompleted;
        
        /// <remarks/>
        public event InOutCarOnileCompletedEventHandler InOutCarOnileCompleted;
        
        /// <remarks/>
        public event DataDrivingByVersionCompletedEventHandler DataDrivingByVersionCompleted;
        
        /// <remarks/>
        public event uploadByDataCompletedEventHandler uploadByDataCompleted;
        
        /// <remarks/>
        public event GetDateTimeCompletedEventHandler GetDateTimeCompleted;
        
        /// <remarks/>
        public event GetMessageCompletedEventHandler GetMessageCompleted;
        
        /// <remarks/>
        public event ProgramkeepCompletedEventHandler ProgramkeepCompleted;
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event GetCarAllCompletedEventHandler GetCarAllCompleted;
        
        /// <remarks/>
        public event SelectCounterfeitingCarCompletedEventHandler SelectCounterfeitingCarCompleted;
        
        /// <remarks/>
        public event SixInterFaceCheckCompletedEventHandler SixInterFaceCheckCompleted;
        
        /// <remarks/>
        public event WriteImageToJwtDBCompletedEventHandler WriteImageToJwtDBCompleted;
        
        /// <remarks/>
        public event WriteCallMsgToJwtDBCompletedEventHandler WriteCallMsgToJwtDBCompleted;
        
        /// <remarks/>
        public event RegistrationCompletedEventHandler RegistrationCompleted;
        
        /// <remarks/>
        public event SelectIllegalCompletedEventHandler SelectIllegalCompleted;
        
        /// <remarks/>
        public event SelectRoadByParingIDCompletedEventHandler SelectRoadByParingIDCompleted;
        
        /// <remarks/>
        public event WriteImageToJwtDBNewCompletedEventHandler WriteImageToJwtDBNewCompleted;
        
        /// <remarks/>
        public event WriteCallMsgToJwtDBNewCompletedEventHandler WriteCallMsgToJwtDBNewCompleted;
        
        /// <remarks/>
        public event GetCarTypeCompletedEventHandler GetCarTypeCompleted;
        
        /// <remarks/>
        public event SelectCardTypeByConditionCompletedEventHandler SelectCardTypeByConditionCompleted;
        
        /// <remarks/>
        public event InsertCardTypeByConditionCompletedEventHandler InsertCardTypeByConditionCompleted;
        
        /// <remarks/>
        public event UpdateCardTypeByConditionCompletedEventHandler UpdateCardTypeByConditionCompleted;
        
        /// <remarks/>
        public event DeleteCardTypeByConditionCompletedEventHandler DeleteCardTypeByConditionCompleted;
        
        /// <remarks/>
        public event SelectCardInfoByConditionCompletedEventHandler SelectCardInfoByConditionCompleted;
        
        /// <remarks/>
        public event GetRegisterTypeCompletedEventHandler GetRegisterTypeCompleted;
        
        /// <remarks/>
        public event ClientUserAuthenticationCompletedEventHandler ClientUserAuthenticationCompleted;
        
        /// <remarks/>
        public event SelectCarInformationByIDCompletedEventHandler SelectCarInformationByIDCompleted;
        
        /// <remarks/>
        public event UpdateOrAddCarInforCompletedEventHandler UpdateOrAddCarInforCompleted;
        
        /// <remarks/>
        public event SelectCarInformationHistoryRecordCompletedEventHandler SelectCarInformationHistoryRecordCompleted;
        
        /// <remarks/>
        public event SelectCarInformationHistoryRecordTwoCompletedEventHandler SelectCarInformationHistoryRecordTwoCompleted;
        
        /// <remarks/>
        public event InsertCardInfoCompletedEventHandler InsertCardInfoCompleted;
        
        /// <remarks/>
        public event InsertCarInformationHistoryRecordCompletedEventHandler InsertCarInformationHistoryRecordCompleted;
        
        /// <remarks/>
        public event ResetCarInforAndCarHistoryByIDCompletedEventHandler ResetCarInforAndCarHistoryByIDCompleted;
        
        /// <remarks/>
        public event UpdateCarInfoAndBackCardHistoryRecordCompletedEventHandler UpdateCarInfoAndBackCardHistoryRecordCompleted;
        
        /// <remarks/>
        public event UpdateCarInfoAndApplyChangeCardHistoryRecordCompletedEventHandler UpdateCarInfoAndApplyChangeCardHistoryRecordCompleted;
        
        /// <remarks/>
        public event UpdateCarInfoAndChangeCardHistoryRecordCompletedEventHandler UpdateCarInfoAndChangeCardHistoryRecordCompleted;
        
        /// <remarks/>
        public event ReturnSystemConfigValueCompletedEventHandler ReturnSystemConfigValueCompleted;
        
        /// <remarks/>
        public event A_testCarFunctionCompletedEventHandler A_testCarFunctionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImgByte, string ImgName, string usecode) {
            object[] results = this.Invoke("SaveImage", new object[] {
                        ImgByte,
                        ImgName,
                        usecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImageAsync(byte[] ImgByte, string ImgName, string usecode) {
            this.SaveImageAsync(ImgByte, ImgName, usecode, null);
        }
        
        /// <remarks/>
        public void SaveImageAsync(byte[] ImgByte, string ImgName, string usecode, object userState) {
            if ((this.SaveImageOperationCompleted == null)) {
                this.SaveImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImageOperationCompleted);
            }
            this.InvokeAsync("SaveImage", new object[] {
                        ImgByte,
                        ImgName,
                        usecode}, this.SaveImageOperationCompleted, userState);
        }
        
        private void OnSaveImageOperationCompleted(object arg) {
            if ((this.SaveImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImageCompleted(this, new SaveImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUser(string Uid, string PWD, string DeviceUniqueID, int tus_user_type) {
            object[] results = this.Invoke("CheckUser", new object[] {
                        Uid,
                        PWD,
                        DeviceUniqueID,
                        tus_user_type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserAsync(string Uid, string PWD, string DeviceUniqueID, int tus_user_type) {
            this.CheckUserAsync(Uid, PWD, DeviceUniqueID, tus_user_type, null);
        }
        
        /// <remarks/>
        public void CheckUserAsync(string Uid, string PWD, string DeviceUniqueID, int tus_user_type, object userState) {
            if ((this.CheckUserOperationCompleted == null)) {
                this.CheckUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserOperationCompleted);
            }
            this.InvokeAsync("CheckUser", new object[] {
                        Uid,
                        PWD,
                        DeviceUniqueID,
                        tus_user_type}, this.CheckUserOperationCompleted, userState);
        }
        
        private void OnCheckUserOperationCompleted(object arg) {
            if ((this.CheckUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUserCar(string Uid, string PWD, string DeviceUniqueID, int tus_user_type, string timeTag, string oldName) {
            object[] results = this.Invoke("CheckUserCar", new object[] {
                        Uid,
                        PWD,
                        DeviceUniqueID,
                        tus_user_type,
                        timeTag,
                        oldName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserCarAsync(string Uid, string PWD, string DeviceUniqueID, int tus_user_type, string timeTag, string oldName) {
            this.CheckUserCarAsync(Uid, PWD, DeviceUniqueID, tus_user_type, timeTag, oldName, null);
        }
        
        /// <remarks/>
        public void CheckUserCarAsync(string Uid, string PWD, string DeviceUniqueID, int tus_user_type, string timeTag, string oldName, object userState) {
            if ((this.CheckUserCarOperationCompleted == null)) {
                this.CheckUserCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserCarOperationCompleted);
            }
            this.InvokeAsync("CheckUserCar", new object[] {
                        Uid,
                        PWD,
                        DeviceUniqueID,
                        tus_user_type,
                        timeTag,
                        oldName}, this.CheckUserCarOperationCompleted, userState);
        }
        
        private void OnCheckUserCarOperationCompleted(object arg) {
            if ((this.CheckUserCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCarCompleted(this, new CheckUserCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserCarOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUserCarOne(string UserName, string UserPwd, string DeviceUniqueID) {
            object[] results = this.Invoke("CheckUserCarOne", new object[] {
                        UserName,
                        UserPwd,
                        DeviceUniqueID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserCarOneAsync(string UserName, string UserPwd, string DeviceUniqueID) {
            this.CheckUserCarOneAsync(UserName, UserPwd, DeviceUniqueID, null);
        }
        
        /// <remarks/>
        public void CheckUserCarOneAsync(string UserName, string UserPwd, string DeviceUniqueID, object userState) {
            if ((this.CheckUserCarOneOperationCompleted == null)) {
                this.CheckUserCarOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserCarOneOperationCompleted);
            }
            this.InvokeAsync("CheckUserCarOne", new object[] {
                        UserName,
                        UserPwd,
                        DeviceUniqueID}, this.CheckUserCarOneOperationCompleted, userState);
        }
        
        private void OnCheckUserCarOneOperationCompleted(object arg) {
            if ((this.CheckUserCarOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCarOneCompleted(this, new CheckUserCarOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserCarTwo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUserCarTwo(string UserName, string UserPwd, string DeviceUniqueID, string timeTag) {
            object[] results = this.Invoke("CheckUserCarTwo", new object[] {
                        UserName,
                        UserPwd,
                        DeviceUniqueID,
                        timeTag});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserCarTwoAsync(string UserName, string UserPwd, string DeviceUniqueID, string timeTag) {
            this.CheckUserCarTwoAsync(UserName, UserPwd, DeviceUniqueID, timeTag, null);
        }
        
        /// <remarks/>
        public void CheckUserCarTwoAsync(string UserName, string UserPwd, string DeviceUniqueID, string timeTag, object userState) {
            if ((this.CheckUserCarTwoOperationCompleted == null)) {
                this.CheckUserCarTwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserCarTwoOperationCompleted);
            }
            this.InvokeAsync("CheckUserCarTwo", new object[] {
                        UserName,
                        UserPwd,
                        DeviceUniqueID,
                        timeTag}, this.CheckUserCarTwoOperationCompleted, userState);
        }
        
        private void OnCheckUserCarTwoOperationCompleted(object arg) {
            if ((this.CheckUserCarTwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCarTwoCompleted(this, new CheckUserCarTwoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartUserOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StartUserOut(string userCode, string beginUserCode) {
            object[] results = this.Invoke("StartUserOut", new object[] {
                        userCode,
                        beginUserCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StartUserOutAsync(string userCode, string beginUserCode) {
            this.StartUserOutAsync(userCode, beginUserCode, null);
        }
        
        /// <remarks/>
        public void StartUserOutAsync(string userCode, string beginUserCode, object userState) {
            if ((this.StartUserOutOperationCompleted == null)) {
                this.StartUserOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartUserOutOperationCompleted);
            }
            this.InvokeAsync("StartUserOut", new object[] {
                        userCode,
                        beginUserCode}, this.StartUserOutOperationCompleted, userState);
        }
        
        private void OnStartUserOutOperationCompleted(object arg) {
            if ((this.StartUserOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartUserOutCompleted(this, new StartUserOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassWord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassWord(string Guid, string pwd) {
            object[] results = this.Invoke("ChangePassWord", new object[] {
                        Guid,
                        pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePassWordAsync(string Guid, string pwd) {
            this.ChangePassWordAsync(Guid, pwd, null);
        }
        
        /// <remarks/>
        public void ChangePassWordAsync(string Guid, string pwd, object userState) {
            if ((this.ChangePassWordOperationCompleted == null)) {
                this.ChangePassWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePassWordOperationCompleted);
            }
            this.InvokeAsync("ChangePassWord", new object[] {
                        Guid,
                        pwd}, this.ChangePassWordOperationCompleted, userState);
        }
        
        private void OnChangePassWordOperationCompleted(object arg) {
            if ((this.ChangePassWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePassWordCompleted(this, new ChangePassWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/inOutCarStatu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool inOutCarStatu(string tsps_park_id, int tsps_no, string tsps_use_statu) {
            object[] results = this.Invoke("inOutCarStatu", new object[] {
                        tsps_park_id,
                        tsps_no,
                        tsps_use_statu});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void inOutCarStatuAsync(string tsps_park_id, int tsps_no, string tsps_use_statu) {
            this.inOutCarStatuAsync(tsps_park_id, tsps_no, tsps_use_statu, null);
        }
        
        /// <remarks/>
        public void inOutCarStatuAsync(string tsps_park_id, int tsps_no, string tsps_use_statu, object userState) {
            if ((this.inOutCarStatuOperationCompleted == null)) {
                this.inOutCarStatuOperationCompleted = new System.Threading.SendOrPostCallback(this.OninOutCarStatuOperationCompleted);
            }
            this.InvokeAsync("inOutCarStatu", new object[] {
                        tsps_park_id,
                        tsps_no,
                        tsps_use_statu}, this.inOutCarStatuOperationCompleted, userState);
        }
        
        private void OninOutCarStatuOperationCompleted(object arg) {
            if ((this.inOutCarStatuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inOutCarStatuCompleted(this, new inOutCarStatuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/inCarStatuItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool inCarStatuItem(string tppu_park_id, System.Data.DataTable Dtparking_unit) {
            object[] results = this.Invoke("inCarStatuItem", new object[] {
                        tppu_park_id,
                        Dtparking_unit});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void inCarStatuItemAsync(string tppu_park_id, System.Data.DataTable Dtparking_unit) {
            this.inCarStatuItemAsync(tppu_park_id, Dtparking_unit, null);
        }
        
        /// <remarks/>
        public void inCarStatuItemAsync(string tppu_park_id, System.Data.DataTable Dtparking_unit, object userState) {
            if ((this.inCarStatuItemOperationCompleted == null)) {
                this.inCarStatuItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OninCarStatuItemOperationCompleted);
            }
            this.InvokeAsync("inCarStatuItem", new object[] {
                        tppu_park_id,
                        Dtparking_unit}, this.inCarStatuItemOperationCompleted, userState);
        }
        
        private void OninCarStatuItemOperationCompleted(object arg) {
            if ((this.inCarStatuItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inCarStatuItemCompleted(this, new inCarStatuItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/inCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool inCar(
                    string tsps_park_id, 
                    int tsps_no, 
                    string tsps_use_statu, 
                    string tcio_id, 
                    int tcio_area, 
                    string tcio_park_code, 
                    int tcio_unit_num, 
                    string tcio_car_lic, 
                    System.DateTime tcio_enter_time, 
                    string tcio_barcode, 
                    string tcio_license_photo_path, 
                    string tcio_car_photo_path, 
                    string tcio_car_other_photo_path, 
                    string tcio_user_code, 
                    string tcio_user_name, 
                    decimal tcio_fee, 
                    string tcio_out_type) {
            object[] results = this.Invoke("inCar", new object[] {
                        tsps_park_id,
                        tsps_no,
                        tsps_use_statu,
                        tcio_id,
                        tcio_area,
                        tcio_park_code,
                        tcio_unit_num,
                        tcio_car_lic,
                        tcio_enter_time,
                        tcio_barcode,
                        tcio_license_photo_path,
                        tcio_car_photo_path,
                        tcio_car_other_photo_path,
                        tcio_user_code,
                        tcio_user_name,
                        tcio_fee,
                        tcio_out_type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void inCarAsync(
                    string tsps_park_id, 
                    int tsps_no, 
                    string tsps_use_statu, 
                    string tcio_id, 
                    int tcio_area, 
                    string tcio_park_code, 
                    int tcio_unit_num, 
                    string tcio_car_lic, 
                    System.DateTime tcio_enter_time, 
                    string tcio_barcode, 
                    string tcio_license_photo_path, 
                    string tcio_car_photo_path, 
                    string tcio_car_other_photo_path, 
                    string tcio_user_code, 
                    string tcio_user_name, 
                    decimal tcio_fee, 
                    string tcio_out_type) {
            this.inCarAsync(tsps_park_id, tsps_no, tsps_use_statu, tcio_id, tcio_area, tcio_park_code, tcio_unit_num, tcio_car_lic, tcio_enter_time, tcio_barcode, tcio_license_photo_path, tcio_car_photo_path, tcio_car_other_photo_path, tcio_user_code, tcio_user_name, tcio_fee, tcio_out_type, null);
        }
        
        /// <remarks/>
        public void inCarAsync(
                    string tsps_park_id, 
                    int tsps_no, 
                    string tsps_use_statu, 
                    string tcio_id, 
                    int tcio_area, 
                    string tcio_park_code, 
                    int tcio_unit_num, 
                    string tcio_car_lic, 
                    System.DateTime tcio_enter_time, 
                    string tcio_barcode, 
                    string tcio_license_photo_path, 
                    string tcio_car_photo_path, 
                    string tcio_car_other_photo_path, 
                    string tcio_user_code, 
                    string tcio_user_name, 
                    decimal tcio_fee, 
                    string tcio_out_type, 
                    object userState) {
            if ((this.inCarOperationCompleted == null)) {
                this.inCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OninCarOperationCompleted);
            }
            this.InvokeAsync("inCar", new object[] {
                        tsps_park_id,
                        tsps_no,
                        tsps_use_statu,
                        tcio_id,
                        tcio_area,
                        tcio_park_code,
                        tcio_unit_num,
                        tcio_car_lic,
                        tcio_enter_time,
                        tcio_barcode,
                        tcio_license_photo_path,
                        tcio_car_photo_path,
                        tcio_car_other_photo_path,
                        tcio_user_code,
                        tcio_user_name,
                        tcio_fee,
                        tcio_out_type}, this.inCarOperationCompleted, userState);
        }
        
        private void OninCarOperationCompleted(object arg) {
            if ((this.inCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inCarCompleted(this, new inCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TbcarFee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TbcarFee(string tcio_id, int tcfe_area, string tcfe_park_code, string tcfe_park_name, int tcfe_unit_num, string tcfe_car_lic, string tcfe_status, decimal tcfe_car_fee, string tcfe_user_code, string tcfe_user_name, System.DateTime tcfe_operate_time) {
            object[] results = this.Invoke("TbcarFee", new object[] {
                        tcio_id,
                        tcfe_area,
                        tcfe_park_code,
                        tcfe_park_name,
                        tcfe_unit_num,
                        tcfe_car_lic,
                        tcfe_status,
                        tcfe_car_fee,
                        tcfe_user_code,
                        tcfe_user_name,
                        tcfe_operate_time});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TbcarFeeAsync(string tcio_id, int tcfe_area, string tcfe_park_code, string tcfe_park_name, int tcfe_unit_num, string tcfe_car_lic, string tcfe_status, decimal tcfe_car_fee, string tcfe_user_code, string tcfe_user_name, System.DateTime tcfe_operate_time) {
            this.TbcarFeeAsync(tcio_id, tcfe_area, tcfe_park_code, tcfe_park_name, tcfe_unit_num, tcfe_car_lic, tcfe_status, tcfe_car_fee, tcfe_user_code, tcfe_user_name, tcfe_operate_time, null);
        }
        
        /// <remarks/>
        public void TbcarFeeAsync(string tcio_id, int tcfe_area, string tcfe_park_code, string tcfe_park_name, int tcfe_unit_num, string tcfe_car_lic, string tcfe_status, decimal tcfe_car_fee, string tcfe_user_code, string tcfe_user_name, System.DateTime tcfe_operate_time, object userState) {
            if ((this.TbcarFeeOperationCompleted == null)) {
                this.TbcarFeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTbcarFeeOperationCompleted);
            }
            this.InvokeAsync("TbcarFee", new object[] {
                        tcio_id,
                        tcfe_area,
                        tcfe_park_code,
                        tcfe_park_name,
                        tcfe_unit_num,
                        tcfe_car_lic,
                        tcfe_status,
                        tcfe_car_fee,
                        tcfe_user_code,
                        tcfe_user_name,
                        tcfe_operate_time}, this.TbcarFeeOperationCompleted, userState);
        }
        
        private void OnTbcarFeeOperationCompleted(object arg) {
            if ((this.TbcarFeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TbcarFeeCompleted(this, new TbcarFeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EscapeOverMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EscapeOverMessage(string teom_inout_id, int teom_area, string teom_park_code, string teom_park_name, string teom_car_lic, int teom_unit_num, int teom_status, string teom_type, System.DateTime teom_upload_time, decimal teom_money, string teom_employee_code, string teom_employee_name, string teom_car_type) {
            object[] results = this.Invoke("EscapeOverMessage", new object[] {
                        teom_inout_id,
                        teom_area,
                        teom_park_code,
                        teom_park_name,
                        teom_car_lic,
                        teom_unit_num,
                        teom_status,
                        teom_type,
                        teom_upload_time,
                        teom_money,
                        teom_employee_code,
                        teom_employee_name,
                        teom_car_type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EscapeOverMessageAsync(string teom_inout_id, int teom_area, string teom_park_code, string teom_park_name, string teom_car_lic, int teom_unit_num, int teom_status, string teom_type, System.DateTime teom_upload_time, decimal teom_money, string teom_employee_code, string teom_employee_name, string teom_car_type) {
            this.EscapeOverMessageAsync(teom_inout_id, teom_area, teom_park_code, teom_park_name, teom_car_lic, teom_unit_num, teom_status, teom_type, teom_upload_time, teom_money, teom_employee_code, teom_employee_name, teom_car_type, null);
        }
        
        /// <remarks/>
        public void EscapeOverMessageAsync(string teom_inout_id, int teom_area, string teom_park_code, string teom_park_name, string teom_car_lic, int teom_unit_num, int teom_status, string teom_type, System.DateTime teom_upload_time, decimal teom_money, string teom_employee_code, string teom_employee_name, string teom_car_type, object userState) {
            if ((this.EscapeOverMessageOperationCompleted == null)) {
                this.EscapeOverMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscapeOverMessageOperationCompleted);
            }
            this.InvokeAsync("EscapeOverMessage", new object[] {
                        teom_inout_id,
                        teom_area,
                        teom_park_code,
                        teom_park_name,
                        teom_car_lic,
                        teom_unit_num,
                        teom_status,
                        teom_type,
                        teom_upload_time,
                        teom_money,
                        teom_employee_code,
                        teom_employee_name,
                        teom_car_type}, this.EscapeOverMessageOperationCompleted, userState);
        }
        
        private void OnEscapeOverMessageOperationCompleted(object arg) {
            if ((this.EscapeOverMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscapeOverMessageCompleted(this, new EscapeOverMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/inCarItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void inCarItem(int tcio_area, System.Data.DataTable Dt) {
            this.Invoke("inCarItem", new object[] {
                        tcio_area,
                        Dt});
        }
        
        /// <remarks/>
        public void inCarItemAsync(int tcio_area, System.Data.DataTable Dt) {
            this.inCarItemAsync(tcio_area, Dt, null);
        }
        
        /// <remarks/>
        public void inCarItemAsync(int tcio_area, System.Data.DataTable Dt, object userState) {
            if ((this.inCarItemOperationCompleted == null)) {
                this.inCarItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OninCarItemOperationCompleted);
            }
            this.InvokeAsync("inCarItem", new object[] {
                        tcio_area,
                        Dt}, this.inCarItemOperationCompleted, userState);
        }
        
        private void OninCarItemOperationCompleted(object arg) {
            if ((this.inCarItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inCarItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/outCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool outCar(string tsps_park_id, int tsps_no, string tsps_use_statu, System.DateTime tcio_out_time, decimal tcio_fee, string tcio_out_type, string tcio_id) {
            object[] results = this.Invoke("outCar", new object[] {
                        tsps_park_id,
                        tsps_no,
                        tsps_use_statu,
                        tcio_out_time,
                        tcio_fee,
                        tcio_out_type,
                        tcio_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void outCarAsync(string tsps_park_id, int tsps_no, string tsps_use_statu, System.DateTime tcio_out_time, decimal tcio_fee, string tcio_out_type, string tcio_id) {
            this.outCarAsync(tsps_park_id, tsps_no, tsps_use_statu, tcio_out_time, tcio_fee, tcio_out_type, tcio_id, null);
        }
        
        /// <remarks/>
        public void outCarAsync(string tsps_park_id, int tsps_no, string tsps_use_statu, System.DateTime tcio_out_time, decimal tcio_fee, string tcio_out_type, string tcio_id, object userState) {
            if ((this.outCarOperationCompleted == null)) {
                this.outCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutCarOperationCompleted);
            }
            this.InvokeAsync("outCar", new object[] {
                        tsps_park_id,
                        tsps_no,
                        tsps_use_statu,
                        tcio_out_time,
                        tcio_fee,
                        tcio_out_type,
                        tcio_id}, this.outCarOperationCompleted, userState);
        }
        
        private void OnoutCarOperationCompleted(object arg) {
            if ((this.outCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outCarCompleted(this, new outCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/outCarItmes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void outCarItmes(string tsps_user_code, System.Data.DataTable Dt) {
            this.Invoke("outCarItmes", new object[] {
                        tsps_user_code,
                        Dt});
        }
        
        /// <remarks/>
        public void outCarItmesAsync(string tsps_user_code, System.Data.DataTable Dt) {
            this.outCarItmesAsync(tsps_user_code, Dt, null);
        }
        
        /// <remarks/>
        public void outCarItmesAsync(string tsps_user_code, System.Data.DataTable Dt, object userState) {
            if ((this.outCarItmesOperationCompleted == null)) {
                this.outCarItmesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutCarItmesOperationCompleted);
            }
            this.InvokeAsync("outCarItmes", new object[] {
                        tsps_user_code,
                        Dt}, this.outCarItmesOperationCompleted, userState);
        }
        
        private void OnoutCarItmesOperationCompleted(object arg) {
            if ((this.outCarItmesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outCarItmesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserByName(string UserName) {
            object[] results = this.Invoke("GetUserByName", new object[] {
                        UserName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByNameAsync(string UserName) {
            this.GetUserByNameAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetUserByNameAsync(string UserName, object userState) {
            if ((this.GetUserByNameOperationCompleted == null)) {
                this.GetUserByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByNameOperationCompleted);
            }
            this.InvokeAsync("GetUserByName", new object[] {
                        UserName}, this.GetUserByNameOperationCompleted, userState);
        }
        
        private void OnGetUserByNameOperationCompleted(object arg) {
            if ((this.GetUserByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByNameCompleted(this, new GetUserByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserGetinspection_park_relation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserGetinspection_park_relation(string tsms_operate_userid) {
            object[] results = this.Invoke("GetUserGetinspection_park_relation", new object[] {
                        tsms_operate_userid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGetinspection_park_relationAsync(string tsms_operate_userid) {
            this.GetUserGetinspection_park_relationAsync(tsms_operate_userid, null);
        }
        
        /// <remarks/>
        public void GetUserGetinspection_park_relationAsync(string tsms_operate_userid, object userState) {
            if ((this.GetUserGetinspection_park_relationOperationCompleted == null)) {
                this.GetUserGetinspection_park_relationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGetinspection_park_relationOperationCompleted);
            }
            this.InvokeAsync("GetUserGetinspection_park_relation", new object[] {
                        tsms_operate_userid}, this.GetUserGetinspection_park_relationOperationCompleted, userState);
        }
        
        private void OnGetUserGetinspection_park_relationOperationCompleted(object arg) {
            if ((this.GetUserGetinspection_park_relationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGetinspection_park_relationCompleted(this, new GetUserGetinspection_park_relationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParkingCheck_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetParkingCheck_Details(string tspa_parking_id) {
            object[] results = this.Invoke("GetParkingCheck_Details", new object[] {
                        tspa_parking_id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetParkingCheck_DetailsAsync(string tspa_parking_id) {
            this.GetParkingCheck_DetailsAsync(tspa_parking_id, null);
        }
        
        /// <remarks/>
        public void GetParkingCheck_DetailsAsync(string tspa_parking_id, object userState) {
            if ((this.GetParkingCheck_DetailsOperationCompleted == null)) {
                this.GetParkingCheck_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParkingCheck_DetailsOperationCompleted);
            }
            this.InvokeAsync("GetParkingCheck_Details", new object[] {
                        tspa_parking_id}, this.GetParkingCheck_DetailsOperationCompleted, userState);
        }
        
        private void OnGetParkingCheck_DetailsOperationCompleted(object arg) {
            if ((this.GetParkingCheck_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParkingCheck_DetailsCompleted(this, new GetParkingCheck_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Updatemoniter_taskState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Updatemoniter_taskState([System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] object[][] parameter) {
            object[] results = this.Invoke("Updatemoniter_taskState", new object[] {
                        parameter});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Updatemoniter_taskStateAsync(object[][] parameter) {
            this.Updatemoniter_taskStateAsync(parameter, null);
        }
        
        /// <remarks/>
        public void Updatemoniter_taskStateAsync(object[][] parameter, object userState) {
            if ((this.Updatemoniter_taskStateOperationCompleted == null)) {
                this.Updatemoniter_taskStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatemoniter_taskStateOperationCompleted);
            }
            this.InvokeAsync("Updatemoniter_taskState", new object[] {
                        parameter}, this.Updatemoniter_taskStateOperationCompleted, userState);
        }
        
        private void OnUpdatemoniter_taskStateOperationCompleted(object arg) {
            if ((this.Updatemoniter_taskStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Updatemoniter_taskStateCompleted(this, new Updatemoniter_taskStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStorm_type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetStorm_type() {
            object[] results = this.Invoke("GetStorm_type", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetStorm_typeAsync() {
            this.GetStorm_typeAsync(null);
        }
        
        /// <remarks/>
        public void GetStorm_typeAsync(object userState) {
            if ((this.GetStorm_typeOperationCompleted == null)) {
                this.GetStorm_typeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStorm_typeOperationCompleted);
            }
            this.InvokeAsync("GetStorm_type", new object[0], this.GetStorm_typeOperationCompleted, userState);
        }
        
        private void OnGetStorm_typeOperationCompleted(object arg) {
            if ((this.GetStorm_typeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStorm_typeCompleted(this, new GetStorm_typeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insertmoniter_message", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insertmoniter_message(string tsmm_park_code, string tsmm_unit_num, string tsmm_type, string tsmm_status, string tsmm_comment, string tsmm_photo_path, string tsmm_user_code, string tsmm_user_name, string tsmm_car_lic, string tsmm_enter_time) {
            object[] results = this.Invoke("Insertmoniter_message", new object[] {
                        tsmm_park_code,
                        tsmm_unit_num,
                        tsmm_type,
                        tsmm_status,
                        tsmm_comment,
                        tsmm_photo_path,
                        tsmm_user_code,
                        tsmm_user_name,
                        tsmm_car_lic,
                        tsmm_enter_time});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insertmoniter_messageAsync(string tsmm_park_code, string tsmm_unit_num, string tsmm_type, string tsmm_status, string tsmm_comment, string tsmm_photo_path, string tsmm_user_code, string tsmm_user_name, string tsmm_car_lic, string tsmm_enter_time) {
            this.Insertmoniter_messageAsync(tsmm_park_code, tsmm_unit_num, tsmm_type, tsmm_status, tsmm_comment, tsmm_photo_path, tsmm_user_code, tsmm_user_name, tsmm_car_lic, tsmm_enter_time, null);
        }
        
        /// <remarks/>
        public void Insertmoniter_messageAsync(string tsmm_park_code, string tsmm_unit_num, string tsmm_type, string tsmm_status, string tsmm_comment, string tsmm_photo_path, string tsmm_user_code, string tsmm_user_name, string tsmm_car_lic, string tsmm_enter_time, object userState) {
            if ((this.Insertmoniter_messageOperationCompleted == null)) {
                this.Insertmoniter_messageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertmoniter_messageOperationCompleted);
            }
            this.InvokeAsync("Insertmoniter_message", new object[] {
                        tsmm_park_code,
                        tsmm_unit_num,
                        tsmm_type,
                        tsmm_status,
                        tsmm_comment,
                        tsmm_photo_path,
                        tsmm_user_code,
                        tsmm_user_name,
                        tsmm_car_lic,
                        tsmm_enter_time}, this.Insertmoniter_messageOperationCompleted, userState);
        }
        
        private void OnInsertmoniter_messageOperationCompleted(object arg) {
            if ((this.Insertmoniter_messageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertmoniter_messageCompleted(this, new Insertmoniter_messageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insertmoniter_messageBySelf_inspection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insertmoniter_messageBySelf_inspection(string tsmm_park_code, string tsmm_unit_num, string tsmm_type, string tsmm_status, string tsmm_comment, string tsmm_user_code, string tsmm_user_name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImgByte, string ImgName, string tsmm_car_lic, string tsmm_enter_time) {
            object[] results = this.Invoke("Insertmoniter_messageBySelf_inspection", new object[] {
                        tsmm_park_code,
                        tsmm_unit_num,
                        tsmm_type,
                        tsmm_status,
                        tsmm_comment,
                        tsmm_user_code,
                        tsmm_user_name,
                        ImgByte,
                        ImgName,
                        tsmm_car_lic,
                        tsmm_enter_time});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insertmoniter_messageBySelf_inspectionAsync(string tsmm_park_code, string tsmm_unit_num, string tsmm_type, string tsmm_status, string tsmm_comment, string tsmm_user_code, string tsmm_user_name, byte[] ImgByte, string ImgName, string tsmm_car_lic, string tsmm_enter_time) {
            this.Insertmoniter_messageBySelf_inspectionAsync(tsmm_park_code, tsmm_unit_num, tsmm_type, tsmm_status, tsmm_comment, tsmm_user_code, tsmm_user_name, ImgByte, ImgName, tsmm_car_lic, tsmm_enter_time, null);
        }
        
        /// <remarks/>
        public void Insertmoniter_messageBySelf_inspectionAsync(string tsmm_park_code, string tsmm_unit_num, string tsmm_type, string tsmm_status, string tsmm_comment, string tsmm_user_code, string tsmm_user_name, byte[] ImgByte, string ImgName, string tsmm_car_lic, string tsmm_enter_time, object userState) {
            if ((this.Insertmoniter_messageBySelf_inspectionOperationCompleted == null)) {
                this.Insertmoniter_messageBySelf_inspectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertmoniter_messageBySelf_inspectionOperationCompleted);
            }
            this.InvokeAsync("Insertmoniter_messageBySelf_inspection", new object[] {
                        tsmm_park_code,
                        tsmm_unit_num,
                        tsmm_type,
                        tsmm_status,
                        tsmm_comment,
                        tsmm_user_code,
                        tsmm_user_name,
                        ImgByte,
                        ImgName,
                        tsmm_car_lic,
                        tsmm_enter_time}, this.Insertmoniter_messageBySelf_inspectionOperationCompleted, userState);
        }
        
        private void OnInsertmoniter_messageBySelf_inspectionOperationCompleted(object arg) {
            if ((this.Insertmoniter_messageBySelf_inspectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertmoniter_messageBySelf_inspectionCompleted(this, new Insertmoniter_messageBySelf_inspectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParkingCheck_DetailsByCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParkingCheck_DetailsByCode(string tus_user_id, int beginPage, string tspa_code) {
            object[] results = this.Invoke("GetParkingCheck_DetailsByCode", new object[] {
                        tus_user_id,
                        beginPage,
                        tspa_code});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetParkingCheck_DetailsByCodeAsync(string tus_user_id, int beginPage, string tspa_code) {
            this.GetParkingCheck_DetailsByCodeAsync(tus_user_id, beginPage, tspa_code, null);
        }
        
        /// <remarks/>
        public void GetParkingCheck_DetailsByCodeAsync(string tus_user_id, int beginPage, string tspa_code, object userState) {
            if ((this.GetParkingCheck_DetailsByCodeOperationCompleted == null)) {
                this.GetParkingCheck_DetailsByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParkingCheck_DetailsByCodeOperationCompleted);
            }
            this.InvokeAsync("GetParkingCheck_DetailsByCode", new object[] {
                        tus_user_id,
                        beginPage,
                        tspa_code}, this.GetParkingCheck_DetailsByCodeOperationCompleted, userState);
        }
        
        private void OnGetParkingCheck_DetailsByCodeOperationCompleted(object arg) {
            if ((this.GetParkingCheck_DetailsByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParkingCheck_DetailsByCodeCompleted(this, new GetParkingCheck_DetailsByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParkingCheck_Details_ByParkingCheck_Choice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetParkingCheck_Details_ByParkingCheck_Choice(string tspa_parking_id) {
            object[] results = this.Invoke("GetParkingCheck_Details_ByParkingCheck_Choice", new object[] {
                        tspa_parking_id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetParkingCheck_Details_ByParkingCheck_ChoiceAsync(string tspa_parking_id) {
            this.GetParkingCheck_Details_ByParkingCheck_ChoiceAsync(tspa_parking_id, null);
        }
        
        /// <remarks/>
        public void GetParkingCheck_Details_ByParkingCheck_ChoiceAsync(string tspa_parking_id, object userState) {
            if ((this.GetParkingCheck_Details_ByParkingCheck_ChoiceOperationCompleted == null)) {
                this.GetParkingCheck_Details_ByParkingCheck_ChoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParkingCheck_Details_ByParkingCheck_ChoiceOperationCompleted);
            }
            this.InvokeAsync("GetParkingCheck_Details_ByParkingCheck_Choice", new object[] {
                        tspa_parking_id}, this.GetParkingCheck_Details_ByParkingCheck_ChoiceOperationCompleted, userState);
        }
        
        private void OnGetParkingCheck_Details_ByParkingCheck_ChoiceOperationCompleted(object arg) {
            if ((this.GetParkingCheck_Details_ByParkingCheck_ChoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParkingCheck_Details_ByParkingCheck_ChoiceCompleted(this, new GetParkingCheck_Details_ByParkingCheck_ChoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTb_JinWen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTb_JinWen(string userID) {
            object[] results = this.Invoke("GetTb_JinWen", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTb_JinWenAsync(string userID) {
            this.GetTb_JinWenAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetTb_JinWenAsync(string userID, object userState) {
            if ((this.GetTb_JinWenOperationCompleted == null)) {
                this.GetTb_JinWenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTb_JinWenOperationCompleted);
            }
            this.InvokeAsync("GetTb_JinWen", new object[] {
                        userID}, this.GetTb_JinWenOperationCompleted, userState);
        }
        
        private void OnGetTb_JinWenOperationCompleted(object arg) {
            if ((this.GetTb_JinWenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTb_JinWenCompleted(this, new GetTb_JinWenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectBlacklistAnd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectBlacklistAnd(string licenseplate, string teom_car_type_id) {
            object[] results = this.Invoke("SelectBlacklistAnd", new object[] {
                        licenseplate,
                        teom_car_type_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectBlacklistAndAsync(string licenseplate, string teom_car_type_id) {
            this.SelectBlacklistAndAsync(licenseplate, teom_car_type_id, null);
        }
        
        /// <remarks/>
        public void SelectBlacklistAndAsync(string licenseplate, string teom_car_type_id, object userState) {
            if ((this.SelectBlacklistAndOperationCompleted == null)) {
                this.SelectBlacklistAndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBlacklistAndOperationCompleted);
            }
            this.InvokeAsync("SelectBlacklistAnd", new object[] {
                        licenseplate,
                        teom_car_type_id}, this.SelectBlacklistAndOperationCompleted, userState);
        }
        
        private void OnSelectBlacklistAndOperationCompleted(object arg) {
            if ((this.SelectBlacklistAndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBlacklistAndCompleted(this, new SelectBlacklistAndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpadateByEscape_over_message", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpadateByEscape_over_message(string[] tcfe_card_type_ids, string[] tcfe_cost_types, string[] teom_inout_ids, double[] teom_moneys, string[] userCodes, string[] UserNames, string[] tcfe_areas, string[] tcfe_park_codes, string[] tcfe_park_names, string[] tcio_parking_ids) {
            object[] results = this.Invoke("UpadateByEscape_over_message", new object[] {
                        tcfe_card_type_ids,
                        tcfe_cost_types,
                        teom_inout_ids,
                        teom_moneys,
                        userCodes,
                        UserNames,
                        tcfe_areas,
                        tcfe_park_codes,
                        tcfe_park_names,
                        tcio_parking_ids});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpadateByEscape_over_messageAsync(string[] tcfe_card_type_ids, string[] tcfe_cost_types, string[] teom_inout_ids, double[] teom_moneys, string[] userCodes, string[] UserNames, string[] tcfe_areas, string[] tcfe_park_codes, string[] tcfe_park_names, string[] tcio_parking_ids) {
            this.UpadateByEscape_over_messageAsync(tcfe_card_type_ids, tcfe_cost_types, teom_inout_ids, teom_moneys, userCodes, UserNames, tcfe_areas, tcfe_park_codes, tcfe_park_names, tcio_parking_ids, null);
        }
        
        /// <remarks/>
        public void UpadateByEscape_over_messageAsync(string[] tcfe_card_type_ids, string[] tcfe_cost_types, string[] teom_inout_ids, double[] teom_moneys, string[] userCodes, string[] UserNames, string[] tcfe_areas, string[] tcfe_park_codes, string[] tcfe_park_names, string[] tcio_parking_ids, object userState) {
            if ((this.UpadateByEscape_over_messageOperationCompleted == null)) {
                this.UpadateByEscape_over_messageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpadateByEscape_over_messageOperationCompleted);
            }
            this.InvokeAsync("UpadateByEscape_over_message", new object[] {
                        tcfe_card_type_ids,
                        tcfe_cost_types,
                        teom_inout_ids,
                        teom_moneys,
                        userCodes,
                        UserNames,
                        tcfe_areas,
                        tcfe_park_codes,
                        tcfe_park_names,
                        tcio_parking_ids}, this.UpadateByEscape_over_messageOperationCompleted, userState);
        }
        
        private void OnUpadateByEscape_over_messageOperationCompleted(object arg) {
            if ((this.UpadateByEscape_over_messageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpadateByEscape_over_messageCompleted(this, new UpadateByEscape_over_messageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpadateByEscape_over_messageByDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpadateByEscape_over_messageByDataTable(System.Data.DataTable tableData, string tcfe_card_type_id, string tcfe_cost_type) {
            object[] results = this.Invoke("UpadateByEscape_over_messageByDataTable", new object[] {
                        tableData,
                        tcfe_card_type_id,
                        tcfe_cost_type});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpadateByEscape_over_messageByDataTableAsync(System.Data.DataTable tableData, string tcfe_card_type_id, string tcfe_cost_type) {
            this.UpadateByEscape_over_messageByDataTableAsync(tableData, tcfe_card_type_id, tcfe_cost_type, null);
        }
        
        /// <remarks/>
        public void UpadateByEscape_over_messageByDataTableAsync(System.Data.DataTable tableData, string tcfe_card_type_id, string tcfe_cost_type, object userState) {
            if ((this.UpadateByEscape_over_messageByDataTableOperationCompleted == null)) {
                this.UpadateByEscape_over_messageByDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpadateByEscape_over_messageByDataTableOperationCompleted);
            }
            this.InvokeAsync("UpadateByEscape_over_messageByDataTable", new object[] {
                        tableData,
                        tcfe_card_type_id,
                        tcfe_cost_type}, this.UpadateByEscape_over_messageByDataTableOperationCompleted, userState);
        }
        
        private void OnUpadateByEscape_over_messageByDataTableOperationCompleted(object arg) {
            if ((this.UpadateByEscape_over_messageByDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpadateByEscape_over_messageByDataTableCompleted(this, new UpadateByEscape_over_messageByDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectlicensePhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SelectlicensePhoto(string parkinoutID) {
            object[] results = this.Invoke("SelectlicensePhoto", new object[] {
                        parkinoutID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectlicensePhotoAsync(string parkinoutID) {
            this.SelectlicensePhotoAsync(parkinoutID, null);
        }
        
        /// <remarks/>
        public void SelectlicensePhotoAsync(string parkinoutID, object userState) {
            if ((this.SelectlicensePhotoOperationCompleted == null)) {
                this.SelectlicensePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectlicensePhotoOperationCompleted);
            }
            this.InvokeAsync("SelectlicensePhoto", new object[] {
                        parkinoutID}, this.SelectlicensePhotoOperationCompleted, userState);
        }
        
        private void OnSelectlicensePhotoOperationCompleted(object arg) {
            if ((this.SelectlicensePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectlicensePhotoCompleted(this, new SelectlicensePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePeople", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePeople(int region_id, string parking_id, System.DateTime last_date, string status, string user_id, string timeTag, string userCode, string driverId) {
            object[] results = this.Invoke("ChangePeople", new object[] {
                        region_id,
                        parking_id,
                        last_date,
                        status,
                        user_id,
                        timeTag,
                        userCode,
                        driverId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePeopleAsync(int region_id, string parking_id, System.DateTime last_date, string status, string user_id, string timeTag, string userCode, string driverId) {
            this.ChangePeopleAsync(region_id, parking_id, last_date, status, user_id, timeTag, userCode, driverId, null);
        }
        
        /// <remarks/>
        public void ChangePeopleAsync(int region_id, string parking_id, System.DateTime last_date, string status, string user_id, string timeTag, string userCode, string driverId, object userState) {
            if ((this.ChangePeopleOperationCompleted == null)) {
                this.ChangePeopleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePeopleOperationCompleted);
            }
            this.InvokeAsync("ChangePeople", new object[] {
                        region_id,
                        parking_id,
                        last_date,
                        status,
                        user_id,
                        timeTag,
                        userCode,
                        driverId}, this.ChangePeopleOperationCompleted, userState);
        }
        
        private void OnChangePeopleOperationCompleted(object arg) {
            if ((this.ChangePeopleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePeopleCompleted(this, new ChangePeopleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InOutCarOnile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InOutCarOnile(string tsps_park_id, int tsps_no) {
            object[] results = this.Invoke("InOutCarOnile", new object[] {
                        tsps_park_id,
                        tsps_no});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InOutCarOnileAsync(string tsps_park_id, int tsps_no) {
            this.InOutCarOnileAsync(tsps_park_id, tsps_no, null);
        }
        
        /// <remarks/>
        public void InOutCarOnileAsync(string tsps_park_id, int tsps_no, object userState) {
            if ((this.InOutCarOnileOperationCompleted == null)) {
                this.InOutCarOnileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInOutCarOnileOperationCompleted);
            }
            this.InvokeAsync("InOutCarOnile", new object[] {
                        tsps_park_id,
                        tsps_no}, this.InOutCarOnileOperationCompleted, userState);
        }
        
        private void OnInOutCarOnileOperationCompleted(object arg) {
            if ((this.InOutCarOnileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InOutCarOnileCompleted(this, new InOutCarOnileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataDrivingByVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DataDrivingByVersion(System.Data.DataTable VersionTable, string usercode, out string[] TableNames) {
            object[] results = this.Invoke("DataDrivingByVersion", new object[] {
                        VersionTable,
                        usercode});
            TableNames = ((string[])(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DataDrivingByVersionAsync(System.Data.DataTable VersionTable, string usercode) {
            this.DataDrivingByVersionAsync(VersionTable, usercode, null);
        }
        
        /// <remarks/>
        public void DataDrivingByVersionAsync(System.Data.DataTable VersionTable, string usercode, object userState) {
            if ((this.DataDrivingByVersionOperationCompleted == null)) {
                this.DataDrivingByVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataDrivingByVersionOperationCompleted);
            }
            this.InvokeAsync("DataDrivingByVersion", new object[] {
                        VersionTable,
                        usercode}, this.DataDrivingByVersionOperationCompleted, userState);
        }
        
        private void OnDataDrivingByVersionOperationCompleted(object arg) {
            if ((this.DataDrivingByVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataDrivingByVersionCompleted(this, new DataDrivingByVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/uploadByData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool uploadByData(System.Data.DataSet ds) {
            object[] results = this.Invoke("uploadByData", new object[] {
                        ds});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void uploadByDataAsync(System.Data.DataSet ds) {
            this.uploadByDataAsync(ds, null);
        }
        
        /// <remarks/>
        public void uploadByDataAsync(System.Data.DataSet ds, object userState) {
            if ((this.uploadByDataOperationCompleted == null)) {
                this.uploadByDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadByDataOperationCompleted);
            }
            this.InvokeAsync("uploadByData", new object[] {
                        ds}, this.uploadByDataOperationCompleted, userState);
        }
        
        private void OnuploadByDataOperationCompleted(object arg) {
            if ((this.uploadByDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadByDataCompleted(this, new uploadByDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDateTime() {
            object[] results = this.Invoke("GetDateTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateTimeAsync() {
            this.GetDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetDateTimeAsync(object userState) {
            if ((this.GetDateTimeOperationCompleted == null)) {
                this.GetDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetDateTime", new object[0], this.GetDateTimeOperationCompleted, userState);
        }
        
        private void OnGetDateTimeOperationCompleted(object arg) {
            if ((this.GetDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateTimeCompleted(this, new GetDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMessage(string UserId) {
            object[] results = this.Invoke("GetMessage", new object[] {
                        UserId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageAsync(string UserId) {
            this.GetMessageAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetMessageAsync(string UserId, object userState) {
            if ((this.GetMessageOperationCompleted == null)) {
                this.GetMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageOperationCompleted);
            }
            this.InvokeAsync("GetMessage", new object[] {
                        UserId}, this.GetMessageOperationCompleted, userState);
        }
        
        private void OnGetMessageOperationCompleted(object arg) {
            if ((this.GetMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Programkeep", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Programkeep(string equpment_code, int pda_type, out string down_adress) {
            object[] results = this.Invoke("Programkeep", new object[] {
                        equpment_code,
                        pda_type});
            down_adress = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProgramkeepAsync(string equpment_code, int pda_type) {
            this.ProgramkeepAsync(equpment_code, pda_type, null);
        }
        
        /// <remarks/>
        public void ProgramkeepAsync(string equpment_code, int pda_type, object userState) {
            if ((this.ProgramkeepOperationCompleted == null)) {
                this.ProgramkeepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProgramkeepOperationCompleted);
            }
            this.InvokeAsync("Programkeep", new object[] {
                        equpment_code,
                        pda_type}, this.ProgramkeepOperationCompleted, userState);
        }
        
        private void OnProgramkeepOperationCompleted(object arg) {
            if ((this.ProgramkeepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProgramkeepCompleted(this, new ProgramkeepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCarAll(string hpzl, string hphm) {
            object[] results = this.Invoke("GetCarAll", new object[] {
                        hpzl,
                        hphm});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarAllAsync(string hpzl, string hphm) {
            this.GetCarAllAsync(hpzl, hphm, null);
        }
        
        /// <remarks/>
        public void GetCarAllAsync(string hpzl, string hphm, object userState) {
            if ((this.GetCarAllOperationCompleted == null)) {
                this.GetCarAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarAllOperationCompleted);
            }
            this.InvokeAsync("GetCarAll", new object[] {
                        hpzl,
                        hphm}, this.GetCarAllOperationCompleted, userState);
        }
        
        private void OnGetCarAllOperationCompleted(object arg) {
            if ((this.GetCarAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarAllCompleted(this, new GetCarAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCounterfeitingCar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectCounterfeitingCar(string hpzl, string hphm) {
            object[] results = this.Invoke("SelectCounterfeitingCar", new object[] {
                        hpzl,
                        hphm});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCounterfeitingCarAsync(string hpzl, string hphm) {
            this.SelectCounterfeitingCarAsync(hpzl, hphm, null);
        }
        
        /// <remarks/>
        public void SelectCounterfeitingCarAsync(string hpzl, string hphm, object userState) {
            if ((this.SelectCounterfeitingCarOperationCompleted == null)) {
                this.SelectCounterfeitingCarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCounterfeitingCarOperationCompleted);
            }
            this.InvokeAsync("SelectCounterfeitingCar", new object[] {
                        hpzl,
                        hphm}, this.SelectCounterfeitingCarOperationCompleted, userState);
        }
        
        private void OnSelectCounterfeitingCarOperationCompleted(object arg) {
            if ((this.SelectCounterfeitingCarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCounterfeitingCarCompleted(this, new SelectCounterfeitingCarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SixInterFaceCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SixInterFaceCheck(string hpzl, string hphm) {
            object[] results = this.Invoke("SixInterFaceCheck", new object[] {
                        hpzl,
                        hphm});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SixInterFaceCheckAsync(string hpzl, string hphm) {
            this.SixInterFaceCheckAsync(hpzl, hphm, null);
        }
        
        /// <remarks/>
        public void SixInterFaceCheckAsync(string hpzl, string hphm, object userState) {
            if ((this.SixInterFaceCheckOperationCompleted == null)) {
                this.SixInterFaceCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSixInterFaceCheckOperationCompleted);
            }
            this.InvokeAsync("SixInterFaceCheck", new object[] {
                        hpzl,
                        hphm}, this.SixInterFaceCheckOperationCompleted, userState);
        }
        
        private void OnSixInterFaceCheckOperationCompleted(object arg) {
            if ((this.SixInterFaceCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SixInterFaceCheckCompleted(this, new SixInterFaceCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteImageToJwtDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteImageToJwtDB(string strUserName, string strDePassword, string xmlString) {
            object[] results = this.Invoke("WriteImageToJwtDB", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteImageToJwtDBAsync(string strUserName, string strDePassword, string xmlString) {
            this.WriteImageToJwtDBAsync(strUserName, strDePassword, xmlString, null);
        }
        
        /// <remarks/>
        public void WriteImageToJwtDBAsync(string strUserName, string strDePassword, string xmlString, object userState) {
            if ((this.WriteImageToJwtDBOperationCompleted == null)) {
                this.WriteImageToJwtDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteImageToJwtDBOperationCompleted);
            }
            this.InvokeAsync("WriteImageToJwtDB", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString}, this.WriteImageToJwtDBOperationCompleted, userState);
        }
        
        private void OnWriteImageToJwtDBOperationCompleted(object arg) {
            if ((this.WriteImageToJwtDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteImageToJwtDBCompleted(this, new WriteImageToJwtDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteCallMsgToJwtDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteCallMsgToJwtDB(string strUserName, string strDePassword, string xmlString) {
            object[] results = this.Invoke("WriteCallMsgToJwtDB", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteCallMsgToJwtDBAsync(string strUserName, string strDePassword, string xmlString) {
            this.WriteCallMsgToJwtDBAsync(strUserName, strDePassword, xmlString, null);
        }
        
        /// <remarks/>
        public void WriteCallMsgToJwtDBAsync(string strUserName, string strDePassword, string xmlString, object userState) {
            if ((this.WriteCallMsgToJwtDBOperationCompleted == null)) {
                this.WriteCallMsgToJwtDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteCallMsgToJwtDBOperationCompleted);
            }
            this.InvokeAsync("WriteCallMsgToJwtDB", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString}, this.WriteCallMsgToJwtDBOperationCompleted, userState);
        }
        
        private void OnWriteCallMsgToJwtDBOperationCompleted(object arg) {
            if ((this.WriteCallMsgToJwtDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteCallMsgToJwtDBCompleted(this, new WriteCallMsgToJwtDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Registration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Registration(string PDAName, string PDA_code, int type) {
            object[] results = this.Invoke("Registration", new object[] {
                        PDAName,
                        PDA_code,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegistrationAsync(string PDAName, string PDA_code, int type) {
            this.RegistrationAsync(PDAName, PDA_code, type, null);
        }
        
        /// <remarks/>
        public void RegistrationAsync(string PDAName, string PDA_code, int type, object userState) {
            if ((this.RegistrationOperationCompleted == null)) {
                this.RegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistrationOperationCompleted);
            }
            this.InvokeAsync("Registration", new object[] {
                        PDAName,
                        PDA_code,
                        type}, this.RegistrationOperationCompleted, userState);
        }
        
        private void OnRegistrationOperationCompleted(object arg) {
            if ((this.RegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistrationCompleted(this, new RegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectIllegal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectIllegal() {
            object[] results = this.Invoke("SelectIllegal", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectIllegalAsync() {
            this.SelectIllegalAsync(null);
        }
        
        /// <remarks/>
        public void SelectIllegalAsync(object userState) {
            if ((this.SelectIllegalOperationCompleted == null)) {
                this.SelectIllegalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectIllegalOperationCompleted);
            }
            this.InvokeAsync("SelectIllegal", new object[0], this.SelectIllegalOperationCompleted, userState);
        }
        
        private void OnSelectIllegalOperationCompleted(object arg) {
            if ((this.SelectIllegalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectIllegalCompleted(this, new SelectIllegalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectRoadByParingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectRoadByParingID(string parking_id) {
            object[] results = this.Invoke("SelectRoadByParingID", new object[] {
                        parking_id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectRoadByParingIDAsync(string parking_id) {
            this.SelectRoadByParingIDAsync(parking_id, null);
        }
        
        /// <remarks/>
        public void SelectRoadByParingIDAsync(string parking_id, object userState) {
            if ((this.SelectRoadByParingIDOperationCompleted == null)) {
                this.SelectRoadByParingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectRoadByParingIDOperationCompleted);
            }
            this.InvokeAsync("SelectRoadByParingID", new object[] {
                        parking_id}, this.SelectRoadByParingIDOperationCompleted, userState);
        }
        
        private void OnSelectRoadByParingIDOperationCompleted(object arg) {
            if ((this.SelectRoadByParingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectRoadByParingIDCompleted(this, new SelectRoadByParingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteImageToJwtDBNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteImageToJwtDBNew(string strUserName, string strDePassword, string xmlString, string[] parameters) {
            object[] results = this.Invoke("WriteImageToJwtDBNew", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteImageToJwtDBNewAsync(string strUserName, string strDePassword, string xmlString, string[] parameters) {
            this.WriteImageToJwtDBNewAsync(strUserName, strDePassword, xmlString, parameters, null);
        }
        
        /// <remarks/>
        public void WriteImageToJwtDBNewAsync(string strUserName, string strDePassword, string xmlString, string[] parameters, object userState) {
            if ((this.WriteImageToJwtDBNewOperationCompleted == null)) {
                this.WriteImageToJwtDBNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteImageToJwtDBNewOperationCompleted);
            }
            this.InvokeAsync("WriteImageToJwtDBNew", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString,
                        parameters}, this.WriteImageToJwtDBNewOperationCompleted, userState);
        }
        
        private void OnWriteImageToJwtDBNewOperationCompleted(object arg) {
            if ((this.WriteImageToJwtDBNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteImageToJwtDBNewCompleted(this, new WriteImageToJwtDBNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteCallMsgToJwtDBNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] WriteCallMsgToJwtDBNew(string strUserName, string strDePassword, string xmlString, string[] parameters) {
            object[] results = this.Invoke("WriteCallMsgToJwtDBNew", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString,
                        parameters});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void WriteCallMsgToJwtDBNewAsync(string strUserName, string strDePassword, string xmlString, string[] parameters) {
            this.WriteCallMsgToJwtDBNewAsync(strUserName, strDePassword, xmlString, parameters, null);
        }
        
        /// <remarks/>
        public void WriteCallMsgToJwtDBNewAsync(string strUserName, string strDePassword, string xmlString, string[] parameters, object userState) {
            if ((this.WriteCallMsgToJwtDBNewOperationCompleted == null)) {
                this.WriteCallMsgToJwtDBNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteCallMsgToJwtDBNewOperationCompleted);
            }
            this.InvokeAsync("WriteCallMsgToJwtDBNew", new object[] {
                        strUserName,
                        strDePassword,
                        xmlString,
                        parameters}, this.WriteCallMsgToJwtDBNewOperationCompleted, userState);
        }
        
        private void OnWriteCallMsgToJwtDBNewOperationCompleted(object arg) {
            if ((this.WriteCallMsgToJwtDBNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteCallMsgToJwtDBNewCompleted(this, new WriteCallMsgToJwtDBNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCarType() {
            object[] results = this.Invoke("GetCarType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarTypeAsync() {
            this.GetCarTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetCarTypeAsync(object userState) {
            if ((this.GetCarTypeOperationCompleted == null)) {
                this.GetCarTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarTypeOperationCompleted);
            }
            this.InvokeAsync("GetCarType", new object[0], this.GetCarTypeOperationCompleted, userState);
        }
        
        private void OnGetCarTypeOperationCompleted(object arg) {
            if ((this.GetCarTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarTypeCompleted(this, new GetCarTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCardTypeByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectCardTypeByCondition(string ConditionString, string OrderBy, int Size, int BeginPage) {
            object[] results = this.Invoke("SelectCardTypeByCondition", new object[] {
                        ConditionString,
                        OrderBy,
                        Size,
                        BeginPage});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectCardTypeByConditionAsync(string ConditionString, string OrderBy, int Size, int BeginPage) {
            this.SelectCardTypeByConditionAsync(ConditionString, OrderBy, Size, BeginPage, null);
        }
        
        /// <remarks/>
        public void SelectCardTypeByConditionAsync(string ConditionString, string OrderBy, int Size, int BeginPage, object userState) {
            if ((this.SelectCardTypeByConditionOperationCompleted == null)) {
                this.SelectCardTypeByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCardTypeByConditionOperationCompleted);
            }
            this.InvokeAsync("SelectCardTypeByCondition", new object[] {
                        ConditionString,
                        OrderBy,
                        Size,
                        BeginPage}, this.SelectCardTypeByConditionOperationCompleted, userState);
        }
        
        private void OnSelectCardTypeByConditionOperationCompleted(object arg) {
            if ((this.SelectCardTypeByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCardTypeByConditionCompleted(this, new SelectCardTypeByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCardTypeByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCardTypeByCondition(string ConditionString) {
            object[] results = this.Invoke("InsertCardTypeByCondition", new object[] {
                        ConditionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCardTypeByConditionAsync(string ConditionString) {
            this.InsertCardTypeByConditionAsync(ConditionString, null);
        }
        
        /// <remarks/>
        public void InsertCardTypeByConditionAsync(string ConditionString, object userState) {
            if ((this.InsertCardTypeByConditionOperationCompleted == null)) {
                this.InsertCardTypeByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCardTypeByConditionOperationCompleted);
            }
            this.InvokeAsync("InsertCardTypeByCondition", new object[] {
                        ConditionString}, this.InsertCardTypeByConditionOperationCompleted, userState);
        }
        
        private void OnInsertCardTypeByConditionOperationCompleted(object arg) {
            if ((this.InsertCardTypeByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCardTypeByConditionCompleted(this, new InsertCardTypeByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCardTypeByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCardTypeByCondition(string ConditionString) {
            object[] results = this.Invoke("UpdateCardTypeByCondition", new object[] {
                        ConditionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCardTypeByConditionAsync(string ConditionString) {
            this.UpdateCardTypeByConditionAsync(ConditionString, null);
        }
        
        /// <remarks/>
        public void UpdateCardTypeByConditionAsync(string ConditionString, object userState) {
            if ((this.UpdateCardTypeByConditionOperationCompleted == null)) {
                this.UpdateCardTypeByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCardTypeByConditionOperationCompleted);
            }
            this.InvokeAsync("UpdateCardTypeByCondition", new object[] {
                        ConditionString}, this.UpdateCardTypeByConditionOperationCompleted, userState);
        }
        
        private void OnUpdateCardTypeByConditionOperationCompleted(object arg) {
            if ((this.UpdateCardTypeByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCardTypeByConditionCompleted(this, new UpdateCardTypeByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCardTypeByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteCardTypeByCondition(string ConditionString) {
            object[] results = this.Invoke("DeleteCardTypeByCondition", new object[] {
                        ConditionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCardTypeByConditionAsync(string ConditionString) {
            this.DeleteCardTypeByConditionAsync(ConditionString, null);
        }
        
        /// <remarks/>
        public void DeleteCardTypeByConditionAsync(string ConditionString, object userState) {
            if ((this.DeleteCardTypeByConditionOperationCompleted == null)) {
                this.DeleteCardTypeByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCardTypeByConditionOperationCompleted);
            }
            this.InvokeAsync("DeleteCardTypeByCondition", new object[] {
                        ConditionString}, this.DeleteCardTypeByConditionOperationCompleted, userState);
        }
        
        private void OnDeleteCardTypeByConditionOperationCompleted(object arg) {
            if ((this.DeleteCardTypeByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCardTypeByConditionCompleted(this, new DeleteCardTypeByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCardInfoByCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectCardInfoByCondition(string ConditionString, int Size, int BeginPage, string strOrderBy) {
            object[] results = this.Invoke("SelectCardInfoByCondition", new object[] {
                        ConditionString,
                        Size,
                        BeginPage,
                        strOrderBy});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectCardInfoByConditionAsync(string ConditionString, int Size, int BeginPage, string strOrderBy) {
            this.SelectCardInfoByConditionAsync(ConditionString, Size, BeginPage, strOrderBy, null);
        }
        
        /// <remarks/>
        public void SelectCardInfoByConditionAsync(string ConditionString, int Size, int BeginPage, string strOrderBy, object userState) {
            if ((this.SelectCardInfoByConditionOperationCompleted == null)) {
                this.SelectCardInfoByConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCardInfoByConditionOperationCompleted);
            }
            this.InvokeAsync("SelectCardInfoByCondition", new object[] {
                        ConditionString,
                        Size,
                        BeginPage,
                        strOrderBy}, this.SelectCardInfoByConditionOperationCompleted, userState);
        }
        
        private void OnSelectCardInfoByConditionOperationCompleted(object arg) {
            if ((this.SelectCardInfoByConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCardInfoByConditionCompleted(this, new SelectCardInfoByConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegisterType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRegisterType(string ConditionString) {
            object[] results = this.Invoke("GetRegisterType", new object[] {
                        ConditionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisterTypeAsync(string ConditionString) {
            this.GetRegisterTypeAsync(ConditionString, null);
        }
        
        /// <remarks/>
        public void GetRegisterTypeAsync(string ConditionString, object userState) {
            if ((this.GetRegisterTypeOperationCompleted == null)) {
                this.GetRegisterTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisterTypeOperationCompleted);
            }
            this.InvokeAsync("GetRegisterType", new object[] {
                        ConditionString}, this.GetRegisterTypeOperationCompleted, userState);
        }
        
        private void OnGetRegisterTypeOperationCompleted(object arg) {
            if ((this.GetRegisterTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisterTypeCompleted(this, new GetRegisterTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientUserAuthentication", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClientUserAuthentication(string Parameter) {
            object[] results = this.Invoke("ClientUserAuthentication", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientUserAuthenticationAsync(string Parameter) {
            this.ClientUserAuthenticationAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void ClientUserAuthenticationAsync(string Parameter, object userState) {
            if ((this.ClientUserAuthenticationOperationCompleted == null)) {
                this.ClientUserAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientUserAuthenticationOperationCompleted);
            }
            this.InvokeAsync("ClientUserAuthentication", new object[] {
                        Parameter}, this.ClientUserAuthenticationOperationCompleted, userState);
        }
        
        private void OnClientUserAuthenticationOperationCompleted(object arg) {
            if ((this.ClientUserAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientUserAuthenticationCompleted(this, new ClientUserAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCarInformationByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectCarInformationByID(string Parameter) {
            object[] results = this.Invoke("SelectCarInformationByID", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCarInformationByIDAsync(string Parameter) {
            this.SelectCarInformationByIDAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void SelectCarInformationByIDAsync(string Parameter, object userState) {
            if ((this.SelectCarInformationByIDOperationCompleted == null)) {
                this.SelectCarInformationByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCarInformationByIDOperationCompleted);
            }
            this.InvokeAsync("SelectCarInformationByID", new object[] {
                        Parameter}, this.SelectCarInformationByIDOperationCompleted, userState);
        }
        
        private void OnSelectCarInformationByIDOperationCompleted(object arg) {
            if ((this.SelectCarInformationByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCarInformationByIDCompleted(this, new SelectCarInformationByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrAddCarInfor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOrAddCarInfor(string Parameter) {
            object[] results = this.Invoke("UpdateOrAddCarInfor", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrAddCarInforAsync(string Parameter) {
            this.UpdateOrAddCarInforAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void UpdateOrAddCarInforAsync(string Parameter, object userState) {
            if ((this.UpdateOrAddCarInforOperationCompleted == null)) {
                this.UpdateOrAddCarInforOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrAddCarInforOperationCompleted);
            }
            this.InvokeAsync("UpdateOrAddCarInfor", new object[] {
                        Parameter}, this.UpdateOrAddCarInforOperationCompleted, userState);
        }
        
        private void OnUpdateOrAddCarInforOperationCompleted(object arg) {
            if ((this.UpdateOrAddCarInforCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrAddCarInforCompleted(this, new UpdateOrAddCarInforCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCarInformationHistoryRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectCarInformationHistoryRecord(string Parameter) {
            object[] results = this.Invoke("SelectCarInformationHistoryRecord", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectCarInformationHistoryRecordAsync(string Parameter) {
            this.SelectCarInformationHistoryRecordAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void SelectCarInformationHistoryRecordAsync(string Parameter, object userState) {
            if ((this.SelectCarInformationHistoryRecordOperationCompleted == null)) {
                this.SelectCarInformationHistoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCarInformationHistoryRecordOperationCompleted);
            }
            this.InvokeAsync("SelectCarInformationHistoryRecord", new object[] {
                        Parameter}, this.SelectCarInformationHistoryRecordOperationCompleted, userState);
        }
        
        private void OnSelectCarInformationHistoryRecordOperationCompleted(object arg) {
            if ((this.SelectCarInformationHistoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCarInformationHistoryRecordCompleted(this, new SelectCarInformationHistoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectCarInformationHistoryRecordTwo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SelectCarInformationHistoryRecordTwo(string ConditionString, int Size, int BeginPage, string strOrderBy) {
            object[] results = this.Invoke("SelectCarInformationHistoryRecordTwo", new object[] {
                        ConditionString,
                        Size,
                        BeginPage,
                        strOrderBy});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectCarInformationHistoryRecordTwoAsync(string ConditionString, int Size, int BeginPage, string strOrderBy) {
            this.SelectCarInformationHistoryRecordTwoAsync(ConditionString, Size, BeginPage, strOrderBy, null);
        }
        
        /// <remarks/>
        public void SelectCarInformationHistoryRecordTwoAsync(string ConditionString, int Size, int BeginPage, string strOrderBy, object userState) {
            if ((this.SelectCarInformationHistoryRecordTwoOperationCompleted == null)) {
                this.SelectCarInformationHistoryRecordTwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectCarInformationHistoryRecordTwoOperationCompleted);
            }
            this.InvokeAsync("SelectCarInformationHistoryRecordTwo", new object[] {
                        ConditionString,
                        Size,
                        BeginPage,
                        strOrderBy}, this.SelectCarInformationHistoryRecordTwoOperationCompleted, userState);
        }
        
        private void OnSelectCarInformationHistoryRecordTwoOperationCompleted(object arg) {
            if ((this.SelectCarInformationHistoryRecordTwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectCarInformationHistoryRecordTwoCompleted(this, new SelectCarInformationHistoryRecordTwoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCardInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCardInfo(string Parameter) {
            object[] results = this.Invoke("InsertCardInfo", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCardInfoAsync(string Parameter) {
            this.InsertCardInfoAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void InsertCardInfoAsync(string Parameter, object userState) {
            if ((this.InsertCardInfoOperationCompleted == null)) {
                this.InsertCardInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCardInfoOperationCompleted);
            }
            this.InvokeAsync("InsertCardInfo", new object[] {
                        Parameter}, this.InsertCardInfoOperationCompleted, userState);
        }
        
        private void OnInsertCardInfoOperationCompleted(object arg) {
            if ((this.InsertCardInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCardInfoCompleted(this, new InsertCardInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCarInformationHistoryRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCarInformationHistoryRecord(string Parameter) {
            object[] results = this.Invoke("InsertCarInformationHistoryRecord", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCarInformationHistoryRecordAsync(string Parameter) {
            this.InsertCarInformationHistoryRecordAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void InsertCarInformationHistoryRecordAsync(string Parameter, object userState) {
            if ((this.InsertCarInformationHistoryRecordOperationCompleted == null)) {
                this.InsertCarInformationHistoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCarInformationHistoryRecordOperationCompleted);
            }
            this.InvokeAsync("InsertCarInformationHistoryRecord", new object[] {
                        Parameter}, this.InsertCarInformationHistoryRecordOperationCompleted, userState);
        }
        
        private void OnInsertCarInformationHistoryRecordOperationCompleted(object arg) {
            if ((this.InsertCarInformationHistoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCarInformationHistoryRecordCompleted(this, new InsertCarInformationHistoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetCarInforAndCarHistoryByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetCarInforAndCarHistoryByID(string Parameter) {
            object[] results = this.Invoke("ResetCarInforAndCarHistoryByID", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetCarInforAndCarHistoryByIDAsync(string Parameter) {
            this.ResetCarInforAndCarHistoryByIDAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void ResetCarInforAndCarHistoryByIDAsync(string Parameter, object userState) {
            if ((this.ResetCarInforAndCarHistoryByIDOperationCompleted == null)) {
                this.ResetCarInforAndCarHistoryByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetCarInforAndCarHistoryByIDOperationCompleted);
            }
            this.InvokeAsync("ResetCarInforAndCarHistoryByID", new object[] {
                        Parameter}, this.ResetCarInforAndCarHistoryByIDOperationCompleted, userState);
        }
        
        private void OnResetCarInforAndCarHistoryByIDOperationCompleted(object arg) {
            if ((this.ResetCarInforAndCarHistoryByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetCarInforAndCarHistoryByIDCompleted(this, new ResetCarInforAndCarHistoryByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCarInfoAndBackCardHistoryRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCarInfoAndBackCardHistoryRecord(string Parameter) {
            object[] results = this.Invoke("UpdateCarInfoAndBackCardHistoryRecord", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarInfoAndBackCardHistoryRecordAsync(string Parameter) {
            this.UpdateCarInfoAndBackCardHistoryRecordAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void UpdateCarInfoAndBackCardHistoryRecordAsync(string Parameter, object userState) {
            if ((this.UpdateCarInfoAndBackCardHistoryRecordOperationCompleted == null)) {
                this.UpdateCarInfoAndBackCardHistoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarInfoAndBackCardHistoryRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateCarInfoAndBackCardHistoryRecord", new object[] {
                        Parameter}, this.UpdateCarInfoAndBackCardHistoryRecordOperationCompleted, userState);
        }
        
        private void OnUpdateCarInfoAndBackCardHistoryRecordOperationCompleted(object arg) {
            if ((this.UpdateCarInfoAndBackCardHistoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarInfoAndBackCardHistoryRecordCompleted(this, new UpdateCarInfoAndBackCardHistoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCarInfoAndApplyChangeCardHistoryRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCarInfoAndApplyChangeCardHistoryRecord(string Parameter) {
            object[] results = this.Invoke("UpdateCarInfoAndApplyChangeCardHistoryRecord", new object[] {
                        Parameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarInfoAndApplyChangeCardHistoryRecordAsync(string Parameter) {
            this.UpdateCarInfoAndApplyChangeCardHistoryRecordAsync(Parameter, null);
        }
        
        /// <remarks/>
        public void UpdateCarInfoAndApplyChangeCardHistoryRecordAsync(string Parameter, object userState) {
            if ((this.UpdateCarInfoAndApplyChangeCardHistoryRecordOperationCompleted == null)) {
                this.UpdateCarInfoAndApplyChangeCardHistoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarInfoAndApplyChangeCardHistoryRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateCarInfoAndApplyChangeCardHistoryRecord", new object[] {
                        Parameter}, this.UpdateCarInfoAndApplyChangeCardHistoryRecordOperationCompleted, userState);
        }
        
        private void OnUpdateCarInfoAndApplyChangeCardHistoryRecordOperationCompleted(object arg) {
            if ((this.UpdateCarInfoAndApplyChangeCardHistoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarInfoAndApplyChangeCardHistoryRecordCompleted(this, new UpdateCarInfoAndApplyChangeCardHistoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCarInfoAndChangeCardHistoryRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCarInfoAndChangeCardHistoryRecord(string InitParameter, string HistoryParameter) {
            object[] results = this.Invoke("UpdateCarInfoAndChangeCardHistoryRecord", new object[] {
                        InitParameter,
                        HistoryParameter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCarInfoAndChangeCardHistoryRecordAsync(string InitParameter, string HistoryParameter) {
            this.UpdateCarInfoAndChangeCardHistoryRecordAsync(InitParameter, HistoryParameter, null);
        }
        
        /// <remarks/>
        public void UpdateCarInfoAndChangeCardHistoryRecordAsync(string InitParameter, string HistoryParameter, object userState) {
            if ((this.UpdateCarInfoAndChangeCardHistoryRecordOperationCompleted == null)) {
                this.UpdateCarInfoAndChangeCardHistoryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCarInfoAndChangeCardHistoryRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateCarInfoAndChangeCardHistoryRecord", new object[] {
                        InitParameter,
                        HistoryParameter}, this.UpdateCarInfoAndChangeCardHistoryRecordOperationCompleted, userState);
        }
        
        private void OnUpdateCarInfoAndChangeCardHistoryRecordOperationCompleted(object arg) {
            if ((this.UpdateCarInfoAndChangeCardHistoryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCarInfoAndChangeCardHistoryRecordCompleted(this, new UpdateCarInfoAndChangeCardHistoryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnSystemConfigValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReturnSystemConfigValue(string system, string type, string configCode) {
            object[] results = this.Invoke("ReturnSystemConfigValue", new object[] {
                        system,
                        type,
                        configCode});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnSystemConfigValueAsync(string system, string type, string configCode) {
            this.ReturnSystemConfigValueAsync(system, type, configCode, null);
        }
        
        /// <remarks/>
        public void ReturnSystemConfigValueAsync(string system, string type, string configCode, object userState) {
            if ((this.ReturnSystemConfigValueOperationCompleted == null)) {
                this.ReturnSystemConfigValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnSystemConfigValueOperationCompleted);
            }
            this.InvokeAsync("ReturnSystemConfigValue", new object[] {
                        system,
                        type,
                        configCode}, this.ReturnSystemConfigValueOperationCompleted, userState);
        }
        
        private void OnReturnSystemConfigValueOperationCompleted(object arg) {
            if ((this.ReturnSystemConfigValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnSystemConfigValueCompleted(this, new ReturnSystemConfigValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/A_testCarFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void A_testCarFunction() {
            this.Invoke("A_testCarFunction", new object[0]);
        }
        
        /// <remarks/>
        public void A_testCarFunctionAsync() {
            this.A_testCarFunctionAsync(null);
        }
        
        /// <remarks/>
        public void A_testCarFunctionAsync(object userState) {
            if ((this.A_testCarFunctionOperationCompleted == null)) {
                this.A_testCarFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnA_testCarFunctionOperationCompleted);
            }
            this.InvokeAsync("A_testCarFunction", new object[0], this.A_testCarFunctionOperationCompleted, userState);
        }
        
        private void OnA_testCarFunctionOperationCompleted(object arg) {
            if ((this.A_testCarFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.A_testCarFunctionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SaveImageCompletedEventHandler(object sender, SaveImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckUserCompletedEventHandler(object sender, CheckUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckUserCarCompletedEventHandler(object sender, CheckUserCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckUserCarOneCompletedEventHandler(object sender, CheckUserCarOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCarOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCarOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckUserCarTwoCompletedEventHandler(object sender, CheckUserCarTwoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCarTwoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCarTwoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void StartUserOutCompletedEventHandler(object sender, StartUserOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartUserOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartUserOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ChangePassWordCompletedEventHandler(object sender, ChangePassWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePassWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePassWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void inOutCarStatuCompletedEventHandler(object sender, inOutCarStatuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inOutCarStatuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inOutCarStatuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void inCarStatuItemCompletedEventHandler(object sender, inCarStatuItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inCarStatuItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inCarStatuItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void inCarCompletedEventHandler(object sender, inCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void TbcarFeeCompletedEventHandler(object sender, TbcarFeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TbcarFeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TbcarFeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void EscapeOverMessageCompletedEventHandler(object sender, EscapeOverMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscapeOverMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscapeOverMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void inCarItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void outCarCompletedEventHandler(object sender, outCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void outCarItmesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserByNameCompletedEventHandler(object sender, GetUserByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserGetinspection_park_relationCompletedEventHandler(object sender, GetUserGetinspection_park_relationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGetinspection_park_relationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGetinspection_park_relationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetParkingCheck_DetailsCompletedEventHandler(object sender, GetParkingCheck_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParkingCheck_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParkingCheck_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void Updatemoniter_taskStateCompletedEventHandler(object sender, Updatemoniter_taskStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Updatemoniter_taskStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Updatemoniter_taskStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetStorm_typeCompletedEventHandler(object sender, GetStorm_typeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStorm_typeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStorm_typeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void Insertmoniter_messageCompletedEventHandler(object sender, Insertmoniter_messageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertmoniter_messageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertmoniter_messageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void Insertmoniter_messageBySelf_inspectionCompletedEventHandler(object sender, Insertmoniter_messageBySelf_inspectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertmoniter_messageBySelf_inspectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertmoniter_messageBySelf_inspectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetParkingCheck_DetailsByCodeCompletedEventHandler(object sender, GetParkingCheck_DetailsByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParkingCheck_DetailsByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParkingCheck_DetailsByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetParkingCheck_Details_ByParkingCheck_ChoiceCompletedEventHandler(object sender, GetParkingCheck_Details_ByParkingCheck_ChoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParkingCheck_Details_ByParkingCheck_ChoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParkingCheck_Details_ByParkingCheck_ChoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTb_JinWenCompletedEventHandler(object sender, GetTb_JinWenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTb_JinWenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTb_JinWenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectBlacklistAndCompletedEventHandler(object sender, SelectBlacklistAndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBlacklistAndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBlacklistAndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpadateByEscape_over_messageCompletedEventHandler(object sender, UpadateByEscape_over_messageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpadateByEscape_over_messageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpadateByEscape_over_messageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpadateByEscape_over_messageByDataTableCompletedEventHandler(object sender, UpadateByEscape_over_messageByDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpadateByEscape_over_messageByDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpadateByEscape_over_messageByDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectlicensePhotoCompletedEventHandler(object sender, SelectlicensePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectlicensePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectlicensePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ChangePeopleCompletedEventHandler(object sender, ChangePeopleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePeopleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePeopleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InOutCarOnileCompletedEventHandler(object sender, InOutCarOnileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InOutCarOnileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InOutCarOnileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DataDrivingByVersionCompletedEventHandler(object sender, DataDrivingByVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataDrivingByVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataDrivingByVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] TableNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void uploadByDataCompletedEventHandler(object sender, uploadByDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class uploadByDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal uploadByDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDateTimeCompletedEventHandler(object sender, GetDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetMessageCompletedEventHandler(object sender, GetMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ProgramkeepCompletedEventHandler(object sender, ProgramkeepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProgramkeepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProgramkeepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string down_adress {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCarAllCompletedEventHandler(object sender, GetCarAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectCounterfeitingCarCompletedEventHandler(object sender, SelectCounterfeitingCarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCounterfeitingCarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCounterfeitingCarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SixInterFaceCheckCompletedEventHandler(object sender, SixInterFaceCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SixInterFaceCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SixInterFaceCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WriteImageToJwtDBCompletedEventHandler(object sender, WriteImageToJwtDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteImageToJwtDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteImageToJwtDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WriteCallMsgToJwtDBCompletedEventHandler(object sender, WriteCallMsgToJwtDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteCallMsgToJwtDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteCallMsgToJwtDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RegistrationCompletedEventHandler(object sender, RegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectIllegalCompletedEventHandler(object sender, SelectIllegalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectIllegalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectIllegalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectRoadByParingIDCompletedEventHandler(object sender, SelectRoadByParingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectRoadByParingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectRoadByParingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WriteImageToJwtDBNewCompletedEventHandler(object sender, WriteImageToJwtDBNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteImageToJwtDBNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteImageToJwtDBNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WriteCallMsgToJwtDBNewCompletedEventHandler(object sender, WriteCallMsgToJwtDBNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteCallMsgToJwtDBNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteCallMsgToJwtDBNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCarTypeCompletedEventHandler(object sender, GetCarTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectCardTypeByConditionCompletedEventHandler(object sender, SelectCardTypeByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCardTypeByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCardTypeByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertCardTypeByConditionCompletedEventHandler(object sender, InsertCardTypeByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCardTypeByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCardTypeByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCardTypeByConditionCompletedEventHandler(object sender, UpdateCardTypeByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCardTypeByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCardTypeByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteCardTypeByConditionCompletedEventHandler(object sender, DeleteCardTypeByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCardTypeByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCardTypeByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectCardInfoByConditionCompletedEventHandler(object sender, SelectCardInfoByConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCardInfoByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCardInfoByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRegisterTypeCompletedEventHandler(object sender, GetRegisterTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisterTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisterTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ClientUserAuthenticationCompletedEventHandler(object sender, ClientUserAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientUserAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientUserAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectCarInformationByIDCompletedEventHandler(object sender, SelectCarInformationByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCarInformationByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCarInformationByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateOrAddCarInforCompletedEventHandler(object sender, UpdateOrAddCarInforCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrAddCarInforCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrAddCarInforCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectCarInformationHistoryRecordCompletedEventHandler(object sender, SelectCarInformationHistoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCarInformationHistoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCarInformationHistoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectCarInformationHistoryRecordTwoCompletedEventHandler(object sender, SelectCarInformationHistoryRecordTwoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectCarInformationHistoryRecordTwoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectCarInformationHistoryRecordTwoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertCardInfoCompletedEventHandler(object sender, InsertCardInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCardInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCardInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertCarInformationHistoryRecordCompletedEventHandler(object sender, InsertCarInformationHistoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCarInformationHistoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCarInformationHistoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ResetCarInforAndCarHistoryByIDCompletedEventHandler(object sender, ResetCarInforAndCarHistoryByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetCarInforAndCarHistoryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetCarInforAndCarHistoryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCarInfoAndBackCardHistoryRecordCompletedEventHandler(object sender, UpdateCarInfoAndBackCardHistoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarInfoAndBackCardHistoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarInfoAndBackCardHistoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCarInfoAndApplyChangeCardHistoryRecordCompletedEventHandler(object sender, UpdateCarInfoAndApplyChangeCardHistoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarInfoAndApplyChangeCardHistoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarInfoAndApplyChangeCardHistoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCarInfoAndChangeCardHistoryRecordCompletedEventHandler(object sender, UpdateCarInfoAndChangeCardHistoryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCarInfoAndChangeCardHistoryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCarInfoAndChangeCardHistoryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ReturnSystemConfigValueCompletedEventHandler(object sender, ReturnSystemConfigValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnSystemConfigValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnSystemConfigValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void A_testCarFunctionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591